@model SIGHR.Models.ViewModels.RegistarEncomendaViewModel
@{
    ViewData["Title"] = "Registar Nova Encomenda";
    Layout = "_LayoutCollaborator";
}

@section Styles {
    <style>
        .form-container {
            background: white;
            padding: 30px 40px;
            border-radius: 12px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
            width: 100%;
            max-width: 800px;
            margin: 20px auto;
        }

            .form-container h1 {
                text-align: center;
                margin-bottom: 25px;
                font-size: 1.8rem;
                color: #333;
            }

        .form-group {
            margin-bottom: 1rem;
        }

        .form-label {
            display: block;
            margin-bottom: .5rem;
            font-weight: 500;
        }

        .form-control, .form-select {
            display: block;
            width: 100%;
            padding: .375rem .75rem;
            font-size: 1rem;
            border: 1px solid #ced4da;
            border-radius: .25rem;
        }

        .item-requisicao {
            border: 1px solid #eee;
            padding: 15px;
            margin-bottom: 15px;
            border-radius: 5px;
            background-color: #f9f9f9;
        }

            .item-requisicao .row > div {
                margin-bottom: 10px;
            }

        .text-danger {
            color: #dc3545;
            font-size: 0.9em;
        }

        .alert-success {
            margin-bottom: 20px;
        }

        .mb-3 {
            margin-bottom: 1rem !important;
        }

        /* --- ESTILOS 3D PARA OS BOTÕES --- */
        .btn-custom-style {
            display: inline-block;
            padding: 10px 20px;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            box-shadow: inset 0 1px 0 rgba(255,255,255,0.3), inset 0 0 2px rgba(255,255,255,0.3), 0 4px 0 #444, 0 5px 5px rgba(0,0,0,0.2);
            text-shadow: 0 -1px 0 rgba(0,0,0,0.3);
            transition: all 0.1s ease-in-out;
            font-weight: 500;
            text-decoration: none;
            text-align: center;
        }

        /* Botão Verde (Submeter) */
        .btn-green-custom {
            background: linear-gradient(to bottom, #63d367, #4caf50);
            box-shadow: inset 0 1px 0 rgba(255,255,255,0.3), inset 0 0 2px rgba(255,255,255,0.3), 0 4px 0 #388e3c, 0 5px 5px rgba(0,0,0,0.2);
        }

        /* Botão Vermelho (Cancelar/Remover) */
        .btn-red-custom, .remove-item-btn {
            background: linear-gradient(to bottom, #ff7066, #f44336);
            box-shadow: inset 0 1px 0 rgba(255,255,255,0.3), inset 0 0 2px rgba(255,255,255,0.3), 0 4px 0 #d32f2f, 0 5px 5px rgba(0,0,0,0.2);
        }

        /* Botão Azul (Adicionar Item) */
        .btn-blue-custom {
            background: linear-gradient(to bottom, #5dade2, #3498db);
            box-shadow: inset 0 1px 0 rgba(255,255,255,0.3), inset 0 0 2px rgba(255,255,255,0.3), 0 4px 0 #2980b9, 0 5px 5px rgba(0,0,0,0.2);
        }

        /* Efeito de "pressionar" para todos os botões */


        /* --- CORREÇÃO APLICADA AQUI --- */
        .remove-item-btn {
            /* Sobrescreve o padding da classe .btn-custom-style */
            padding: 8px 12px;
            font-size: .875rem;
            text-decoration: none;
            color: white;
            /* Garante que ocupe todo o espaço vertical disponível no seu container flex */
            height: fit-content;
            align-self: flex-end; /* Alinha na base, mas pode ser redundante com o container */
        }
        /* ------------------------------- */

        .btn-group-actions {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-top: 25px;
        }

        .row {
            display: flex;
            flex-wrap: wrap;
            margin-right: -15px;
            margin-left: -15px;
        }

        .col-md-6, .col-md-7, .col-md-3, .col-md-2 {
            position: relative;
            width: 100%;
            padding-right: 15px;
            padding-left: 15px;
        }

        @@media (min-width: 768px) {
            .col-md-6 {
                flex: 0 0 50%;
                max-width: 50%;
            }

            .col-md-7 {
                flex: 0 0 calc(7 / 12 * 100%);
                max-width: calc(7 / 12 * 100%);
            }

            .col-md-3 {
                flex: 0 0 25%;
                max-width: 25%;
            }

            .col-md-2 {
                flex: 0 0 calc(2 / 12 * 100%);
                max-width: calc(2 / 12 * 100%);
            }
        }

        .d-flex {
            display: flex !important;
        }

        .align-items-end {
            align-items: flex-end !important;
        }
    </style>
}

<div class="form-container">
    <h1>@ViewData["Title"]</h1>
    <hr class="mb-3" />

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success" role="alert">@TempData["SuccessMessage"]</div>
    }

    <form asp-controller="Encomendas" asp-action="Registar" method="post">
        <div asp-validation-summary="All" class="text-danger mb-3"></div>
        <div class="row">
            <div class="col-md-6 form-group">
                <label asp-for="DataEncomenda" class="form-label"></label>
                <input asp-for="DataEncomenda" class="form-control" />
                <span asp-validation-for="DataEncomenda" class="text-danger"></span>
            </div>
            <div class="col-md-6 form-group">
                <label asp-for="DescricaoObra" class="form-label"></label>
                <input asp-for="DescricaoObra" class="form-control" placeholder="Ex: Remodelação Loja Centro" />
                <span asp-validation-for="DescricaoObra" class="text-danger"></span>
            </div>
        </div>
        <hr />
        <h4>Itens da Encomenda</h4>
        <div id="itens-container">
            @for (int i = 0; i < Model.ItensRequisicao.Count; i++)
            {
                <div class="item-requisicao">
                    <div class="row">
                        <div class="col-md-7 form-group">
                            <label asp-for="ItensRequisicao[i].NomeMaterialOuId" class="form-label">Material</label>
                            <select asp-for="ItensRequisicao[i].NomeMaterialOuId" asp-items="Model.MateriaisDisponiveis" class="form-select">
                                <option value="">-- Selecione o Material --</option>
                            </select>
                            <span asp-validation-for="ItensRequisicao[i].NomeMaterialOuId" class="text-danger"></span>
                        </div>
                        <div class="col-md-3 form-group">
                            <label asp-for="ItensRequisicao[i].Quantidade" class="form-label"></label>
                            <input asp-for="ItensRequisicao[i].Quantidade" type="number" min="1" value="1" class="form-control" />
                            <span asp-validation-for="ItensRequisicao[i].Quantidade" class="text-danger"></span>
                        </div>
                        <div class="col-md-2 d-flex align-items-end form-group">
                            @if (i > 0 || Model.ItensRequisicao.Count > 1)
                            {
                                <!-- A classe .btn-custom-style foi removida para usar o padding específico do .remove-item-btn -->
                                <button type="button" class="remove-item-btn" onclick="removerItemRequisicaoEncomenda(this)">Remover</button>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
        <span asp-validation-for="ItensRequisicao" class="text-danger d-block mb-2"></span>
        <button type="button" id="btnAdicionarItem" class="btn-custom-style btn-blue-custom mb-3">Adicionar Outro Material</button>
        <div class="btn-group-actions">
            <button type="submit" class="btn-custom-style btn-green-custom">Registar Encomenda</button>
            <a asp-controller="Collaborator" asp-action="Dashboard" class="btn-custom-style btn-red-custom">Cancelar</a>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script type="text/javascript">
        var itemIndexEncomenda = parseInt('@(Model.ItensRequisicao?.Count ?? 0)');
        var materiaisDisponiveisParaJs_Encomenda = [];
        @if (Model.MateriaisDisponiveis != null)
        {
                    foreach (var materialSelectItem in Model.MateriaisDisponiveis)
                    {
                                @:materiaisDisponiveisParaJs_Encomenda.push({ value: "@Html.Raw(System.Web.HttpUtility.JavaScriptStringEncode(materialSelectItem.Value ?? ""))", text: "@Html.Raw(System.Web.HttpUtility.JavaScriptStringEncode(materialSelectItem.Text ?? "Material Inválido"))" });
                    }
        }
        document.addEventListener('DOMContentLoaded', function () {
            var btnAdicionar = document.getElementById('btnAdicionarItem');
            if (btnAdicionar) {
                btnAdicionar.addEventListener('click', function () {
                    const container = document.getElementById('itens-container');
                    let optionsHtml = '<option value="">-- Selecione o Material --</option>';
                    materiaisDisponiveisParaJs_Encomenda.forEach(function(material) {
                        optionsHtml += `<option value="${material.value}">${material.text}</option>`;
                    });
                    const newItemHtml = `
                        <div class="item-requisicao">
                            <div class="row">
                                <div class="col-md-7 form-group">
                                    <label for="ItensRequisicao_${itemIndexEncomenda}__NomeMaterialOuId" class="form-label">Material</label>
                                    <select name="ItensRequisicao[${itemIndexEncomenda}].NomeMaterialOuId" id="ItensRequisicao_${itemIndexEncomenda}__NomeMaterialOuId" class="form-select">${optionsHtml}</select>
                                    <span class="text-danger field-validation-valid" data-valmsg-for="ItensRequisicao[${itemIndexEncomenda}].NomeMaterialOuId" data-valmsg-replace="true"></span>
                                </div>
                                <div class="col-md-3 form-group">
                                    <label for="ItensRequisicao_${itemIndexEncomenda}__Quantidade" class="form-label">Quantidade</label>
                                    <input type="number" min="1" value="1" name="ItensRequisicao[${itemIndexEncomenda}].Quantidade" id="ItensRequisicao_${itemIndexEncomenda}__Quantidade" class="form-control" />
                                    <span class="text-danger field-validation-valid" data-valmsg-for="ItensRequisicao[${itemIndexEncomenda}].Quantidade" data-valmsg-replace="true"></span>
                                </div>
                                <div class="col-md-2 d-flex align-items-end form-group">
                                    <button type="button" class="remove-item-btn" onclick="removerItemRequisicaoEncomenda(this)">Remover</button>
                                </div>
                            </div>
                        </div>`;
                    container.insertAdjacentHTML('beforeend', newItemHtml);
                    const form = container.closest('form');
                    if (form && typeof window.jQuery !== 'undefined' && typeof window.jQuery.validator !== 'undefined' && typeof window.jQuery.validator.unobtrusive !== 'undefined') {
                        window.jQuery(form).removeData("validator").removeData("unobtrusiveValidation");
                        window.jQuery.validator.unobtrusive.parse(form);
                    }
                    itemIndexEncomenda++;
                });
            }
        });
        function removerItemRequisicaoEncomenda(button) {
            const itemRequisicaoDiv = button.closest('.item-requisicao');
            const container = document.getElementById('itens-container');
            if (container.querySelectorAll('.item-requisicao').length > 1) {
                itemRequisicaoDiv.remove();
            } else {
                alert("Pelo menos um item é necessário na encomenda.");
            }
        }
    </script>
}